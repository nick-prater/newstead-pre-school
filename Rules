#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

passthrough '/style.css'
passthrough '/js/**/*'

compile '/prospectus/**/*', :rep => :policy_printable do
  filter :kramdown
  layout '/policy_printable.*'
end

compile '/privacy_notice/**/*', :rep => :policy_printable do
  filter :kramdown
  layout '/policy_printable.*'
end

compile '/facebook/index.md.*', :rep => :policy_printable do
  filter :kramdown
  layout '/policy_printable.*'
end

compile '/policies/**/*', :rep => :policy_distribution do
  if !item.binary?
    filter :kramdown
    layout '/policy_distribution_record.*'
  end
end


compile '/policies/**/*', :rep => :policy_printable do
  if !item.binary?
    filter :kramdown
    layout '/policy_printable.*'
  end
end



compile '/policies/**/*' do
  if !item.binary?
    filter :kramdown
    layout '/policy.*'
  end
end

compile '/**/*' do
  if !item.binary?
    filter :kramdown
    layout '/policy.*'
  end
end

# Added to stop a crash warning
# Don't currently understand why it's needed now we moved to nanoc v4
compile '/.*' do
end


# These create printable versions of certain pages
route '/prospectus/**/*', :rep => :policy_printable do
  '/prospectus/printable.html'
end

route '/privacy_notice.*', :rep => :policy_printable do
  '/privacy_notice/printable.html'
end

route '/facebook/**/*', :rep => :policy_printable do
  '/facebook/printable.html'
end


# This creates printable versions of every policy
route '/policies.*', :rep => :policy_distribution do
  '/policies/index_distribution.html'
end

route '/policies/**/*', :rep => :policy_distribution do
  if !item.binary?
    item.identifier.without_ext + '.distribution.html'
  end
end


route '/policies.*', :rep => :policy_printable do
  '/policies/index_printable.html'
end

route '/policies/**/*', :rep => :policy_printable do
  if !item.binary?
    item.identifier.without_ext + '.printable.html'
  end
end


route '/policies.*' do
  '/policies/index.html'
end

route '/policies/**/*' do
  if item.binary?
    item.identifier.without_ext + '.' + item[:extension]
  else
    item.identifier.without_ext + '.html'
  end
end

route '/staff.*' do
  '/staff/index.html'
end

route '/staff/*' do
  if item.binary?
    item.identifier.without_ext + '.' + item[:extension]
  else
    item.identifier.without_ext + '.html'
  end
end

route '/trustees.*' do
  '/trustees/index.html'
end

route '/trustees/**/*' do
  if item.binary?
    item.identifier.without_ext + '.' + item[:extension]
  else
    item.identifier.without_ext + '.html'
  end
end




route '/**/*' do
  if (item.binary?)
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.without_ext + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier.without_ext + 'index.html'
  end
end

layout '/**/*', :erb
